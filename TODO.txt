Tasks:
-Electron interface (need a visual representation for manager and client) (1)
-Securing accounts with metamask (peer) (2)
-Arbitrary transactions (mine)
-Alternative threat models? (mine)
-Composite HTLCs (require many secrets) (mine)
-Making transaction details anonymous (mine)
-Testing for HTLC and transactions (3)
-Encryption on top of chat (4)
-Demos folder (stores different threat models) (mine)
-Add heartbeat messages maybe?

Arvind: wallet and Encryption
Alex: tests

Message format (right now only supports wei -> coin and coin -> wei but can generalize later):
{
	type : 'type', (is used in parse message methods)
	wei : 'wei',
	coin : 'coin',
}




The protocol:

A -> M [I want to trade (INIT)]
B -> M [I want to trade(INIT)]

POOL_HASHES:
M -> A,B [ready? send me h(s_A) and h(s_B) (POOL_HASHES)]
A,B -> M [here are h(s_A) and h(s_B) (POOL_HASHES)]

HTLC_CREATE
M -> A,B [gives both h(s_A) and h(s_B) to A,B (CREATE_HTLC_P0)]
A -> Create HTLC with h(h(s_A) || h(s_B))
B -> Create HTLC with h(h(s_A) || h(s_B))

POOL_SECRETS
M verifies that the transaction is correct
M creates outgoing transactions from hashes
M -> A,B (need your secrets)
A,B check Ms outgoing transactions (ok we are good)
A,B -> M (s_A,s_B)
M unlocks funds so s_A,s_b revealed 
A,B claim funds
